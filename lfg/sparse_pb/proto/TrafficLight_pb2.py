# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: TrafficLight.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='TrafficLight.proto',
  package='hdmap',
  syntax='proto3',
  serialized_pb=_b('\n\x12TrafficLight.proto\x12\x05hdmap\"8\n\x05Light\x12\n\n\x02id\x18\x01 \x01(\x05\x12\x10\n\x08geometry\x18\x02 \x01(\t\x12\x11\n\tdirection\x18\x03 \x01(\x05\"^\n\x0cTrafficLight\x12\n\n\x02id\x18\x01 \x01(\x05\x12\x10\n\x08geometry\x18\x02 \x01(\t\x12\x12\n\nmotor_type\x18\x03 \x01(\x05\x12\x1c\n\x06lights\x18\x04 \x03(\x0b\x32\x0c.hdmap.Light\"U\n\x14TrafficLightPerFrame\x12\x10\n\x08\x66rame_id\x18\x01 \x01(\x05\x12+\n\x0etraffic_lights\x18\x02 \x03(\x0b\x32\x13.hdmap.TrafficLight\"e\n\x16TrafficLightPerCapture\x12\x10\n\x08scene_id\x18\x01 \x01(\t\x12\x39\n\x14traffic_light_frames\x18\x02 \x03(\x0b\x32\x1b.hdmap.TrafficLightPerFrameb\x06proto3')
)




_LIGHT = _descriptor.Descriptor(
  name='Light',
  full_name='hdmap.Light',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='hdmap.Light.id', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='geometry', full_name='hdmap.Light.geometry', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='direction', full_name='hdmap.Light.direction', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=29,
  serialized_end=85,
)


_TRAFFICLIGHT = _descriptor.Descriptor(
  name='TrafficLight',
  full_name='hdmap.TrafficLight',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='hdmap.TrafficLight.id', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='geometry', full_name='hdmap.TrafficLight.geometry', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='motor_type', full_name='hdmap.TrafficLight.motor_type', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='lights', full_name='hdmap.TrafficLight.lights', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=87,
  serialized_end=181,
)


_TRAFFICLIGHTPERFRAME = _descriptor.Descriptor(
  name='TrafficLightPerFrame',
  full_name='hdmap.TrafficLightPerFrame',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='frame_id', full_name='hdmap.TrafficLightPerFrame.frame_id', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='traffic_lights', full_name='hdmap.TrafficLightPerFrame.traffic_lights', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=183,
  serialized_end=268,
)


_TRAFFICLIGHTPERCAPTURE = _descriptor.Descriptor(
  name='TrafficLightPerCapture',
  full_name='hdmap.TrafficLightPerCapture',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='scene_id', full_name='hdmap.TrafficLightPerCapture.scene_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='traffic_light_frames', full_name='hdmap.TrafficLightPerCapture.traffic_light_frames', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=270,
  serialized_end=371,
)

_TRAFFICLIGHT.fields_by_name['lights'].message_type = _LIGHT
_TRAFFICLIGHTPERFRAME.fields_by_name['traffic_lights'].message_type = _TRAFFICLIGHT
_TRAFFICLIGHTPERCAPTURE.fields_by_name['traffic_light_frames'].message_type = _TRAFFICLIGHTPERFRAME
DESCRIPTOR.message_types_by_name['Light'] = _LIGHT
DESCRIPTOR.message_types_by_name['TrafficLight'] = _TRAFFICLIGHT
DESCRIPTOR.message_types_by_name['TrafficLightPerFrame'] = _TRAFFICLIGHTPERFRAME
DESCRIPTOR.message_types_by_name['TrafficLightPerCapture'] = _TRAFFICLIGHTPERCAPTURE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Light = _reflection.GeneratedProtocolMessageType('Light', (_message.Message,), dict(
  DESCRIPTOR = _LIGHT,
  __module__ = 'TrafficLight_pb2'
  # @@protoc_insertion_point(class_scope:hdmap.Light)
  ))
_sym_db.RegisterMessage(Light)

TrafficLight = _reflection.GeneratedProtocolMessageType('TrafficLight', (_message.Message,), dict(
  DESCRIPTOR = _TRAFFICLIGHT,
  __module__ = 'TrafficLight_pb2'
  # @@protoc_insertion_point(class_scope:hdmap.TrafficLight)
  ))
_sym_db.RegisterMessage(TrafficLight)

TrafficLightPerFrame = _reflection.GeneratedProtocolMessageType('TrafficLightPerFrame', (_message.Message,), dict(
  DESCRIPTOR = _TRAFFICLIGHTPERFRAME,
  __module__ = 'TrafficLight_pb2'
  # @@protoc_insertion_point(class_scope:hdmap.TrafficLightPerFrame)
  ))
_sym_db.RegisterMessage(TrafficLightPerFrame)

TrafficLightPerCapture = _reflection.GeneratedProtocolMessageType('TrafficLightPerCapture', (_message.Message,), dict(
  DESCRIPTOR = _TRAFFICLIGHTPERCAPTURE,
  __module__ = 'TrafficLight_pb2'
  # @@protoc_insertion_point(class_scope:hdmap.TrafficLightPerCapture)
  ))
_sym_db.RegisterMessage(TrafficLightPerCapture)


# @@protoc_insertion_point(module_scope)
