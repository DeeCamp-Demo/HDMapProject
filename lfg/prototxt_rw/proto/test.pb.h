// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: test.proto

#ifndef PROTOBUF_test_2eproto__INCLUDED
#define PROTOBUF_test_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace test {
class ArmorSize;
class ArmorSizeDefaultTypeInternal;
extern ArmorSizeDefaultTypeInternal _ArmorSize_default_instance_;
class ConstraintSetConfig;
class ConstraintSetConfigDefaultTypeInternal;
extern ConstraintSetConfigDefaultTypeInternal _ConstraintSetConfig_default_instance_;
}  // namespace test

namespace test {

namespace protobuf_test_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_test_2eproto

// ===================================================================

class ArmorSize : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:test.ArmorSize) */ {
 public:
  ArmorSize();
  virtual ~ArmorSize();

  ArmorSize(const ArmorSize& from);

  inline ArmorSize& operator=(const ArmorSize& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ArmorSize(ArmorSize&& from) noexcept
    : ArmorSize() {
    *this = ::std::move(from);
  }

  inline ArmorSize& operator=(ArmorSize&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ArmorSize& default_instance();

  static inline const ArmorSize* internal_default_instance() {
    return reinterpret_cast<const ArmorSize*>(
               &_ArmorSize_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(ArmorSize* other);
  friend void swap(ArmorSize& a, ArmorSize& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ArmorSize* New() const PROTOBUF_FINAL { return New(NULL); }

  ArmorSize* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ArmorSize& from);
  void MergeFrom(const ArmorSize& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ArmorSize* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required float width = 1;
  bool has_width() const;
  void clear_width();
  static const int kWidthFieldNumber = 1;
  float width() const;
  void set_width(float value);

  // required float height = 2;
  bool has_height() const;
  void clear_height();
  static const int kHeightFieldNumber = 2;
  float height() const;
  void set_height(float value);

  // @@protoc_insertion_point(class_scope:test.ArmorSize)
 private:
  void set_has_width();
  void clear_has_width();
  void set_has_height();
  void clear_has_height();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  float width_;
  float height_;
  friend struct protobuf_test_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConstraintSetConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:test.ConstraintSetConfig) */ {
 public:
  ConstraintSetConfig();
  virtual ~ConstraintSetConfig();

  ConstraintSetConfig(const ConstraintSetConfig& from);

  inline ConstraintSetConfig& operator=(const ConstraintSetConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConstraintSetConfig(ConstraintSetConfig&& from) noexcept
    : ConstraintSetConfig() {
    *this = ::std::move(from);
  }

  inline ConstraintSetConfig& operator=(ConstraintSetConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConstraintSetConfig& default_instance();

  static inline const ConstraintSetConfig* internal_default_instance() {
    return reinterpret_cast<const ConstraintSetConfig*>(
               &_ConstraintSetConfig_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(ConstraintSetConfig* other);
  friend void swap(ConstraintSetConfig& a, ConstraintSetConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConstraintSetConfig* New() const PROTOBUF_FINAL { return New(NULL); }

  ConstraintSetConfig* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ConstraintSetConfig& from);
  void MergeFrom(const ConstraintSetConfig& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ConstraintSetConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .test.ArmorSize armor_size = 3;
  int armor_size_size() const;
  void clear_armor_size();
  static const int kArmorSizeFieldNumber = 3;
  const ::test::ArmorSize& armor_size(int index) const;
  ::test::ArmorSize* mutable_armor_size(int index);
  ::test::ArmorSize* add_armor_size();
  ::google::protobuf::RepeatedPtrField< ::test::ArmorSize >*
      mutable_armor_size();
  const ::google::protobuf::RepeatedPtrField< ::test::ArmorSize >&
      armor_size() const;

  // required bool using_hsv = 1;
  bool has_using_hsv() const;
  void clear_using_hsv();
  static const int kUsingHsvFieldNumber = 1;
  bool using_hsv() const;
  void set_using_hsv(bool value);

  // required float num = 2;
  bool has_num() const;
  void clear_num();
  static const int kNumFieldNumber = 2;
  float num() const;
  void set_num(float value);

  // @@protoc_insertion_point(class_scope:test.ConstraintSetConfig)
 private:
  void set_has_using_hsv();
  void clear_has_using_hsv();
  void set_has_num();
  void clear_has_num();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::test::ArmorSize > armor_size_;
  bool using_hsv_;
  float num_;
  friend struct protobuf_test_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ArmorSize

// required float width = 1;
inline bool ArmorSize::has_width() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ArmorSize::set_has_width() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ArmorSize::clear_has_width() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ArmorSize::clear_width() {
  width_ = 0;
  clear_has_width();
}
inline float ArmorSize::width() const {
  // @@protoc_insertion_point(field_get:test.ArmorSize.width)
  return width_;
}
inline void ArmorSize::set_width(float value) {
  set_has_width();
  width_ = value;
  // @@protoc_insertion_point(field_set:test.ArmorSize.width)
}

// required float height = 2;
inline bool ArmorSize::has_height() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ArmorSize::set_has_height() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ArmorSize::clear_has_height() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ArmorSize::clear_height() {
  height_ = 0;
  clear_has_height();
}
inline float ArmorSize::height() const {
  // @@protoc_insertion_point(field_get:test.ArmorSize.height)
  return height_;
}
inline void ArmorSize::set_height(float value) {
  set_has_height();
  height_ = value;
  // @@protoc_insertion_point(field_set:test.ArmorSize.height)
}

// -------------------------------------------------------------------

// ConstraintSetConfig

// required bool using_hsv = 1;
inline bool ConstraintSetConfig::has_using_hsv() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConstraintSetConfig::set_has_using_hsv() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConstraintSetConfig::clear_has_using_hsv() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConstraintSetConfig::clear_using_hsv() {
  using_hsv_ = false;
  clear_has_using_hsv();
}
inline bool ConstraintSetConfig::using_hsv() const {
  // @@protoc_insertion_point(field_get:test.ConstraintSetConfig.using_hsv)
  return using_hsv_;
}
inline void ConstraintSetConfig::set_using_hsv(bool value) {
  set_has_using_hsv();
  using_hsv_ = value;
  // @@protoc_insertion_point(field_set:test.ConstraintSetConfig.using_hsv)
}

// required float num = 2;
inline bool ConstraintSetConfig::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ConstraintSetConfig::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ConstraintSetConfig::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ConstraintSetConfig::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline float ConstraintSetConfig::num() const {
  // @@protoc_insertion_point(field_get:test.ConstraintSetConfig.num)
  return num_;
}
inline void ConstraintSetConfig::set_num(float value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:test.ConstraintSetConfig.num)
}

// repeated .test.ArmorSize armor_size = 3;
inline int ConstraintSetConfig::armor_size_size() const {
  return armor_size_.size();
}
inline void ConstraintSetConfig::clear_armor_size() {
  armor_size_.Clear();
}
inline const ::test::ArmorSize& ConstraintSetConfig::armor_size(int index) const {
  // @@protoc_insertion_point(field_get:test.ConstraintSetConfig.armor_size)
  return armor_size_.Get(index);
}
inline ::test::ArmorSize* ConstraintSetConfig::mutable_armor_size(int index) {
  // @@protoc_insertion_point(field_mutable:test.ConstraintSetConfig.armor_size)
  return armor_size_.Mutable(index);
}
inline ::test::ArmorSize* ConstraintSetConfig::add_armor_size() {
  // @@protoc_insertion_point(field_add:test.ConstraintSetConfig.armor_size)
  return armor_size_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::test::ArmorSize >*
ConstraintSetConfig::mutable_armor_size() {
  // @@protoc_insertion_point(field_mutable_list:test.ConstraintSetConfig.armor_size)
  return &armor_size_;
}
inline const ::google::protobuf::RepeatedPtrField< ::test::ArmorSize >&
ConstraintSetConfig::armor_size() const {
  // @@protoc_insertion_point(field_list:test.ConstraintSetConfig.armor_size)
  return armor_size_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace test

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_test_2eproto__INCLUDED
